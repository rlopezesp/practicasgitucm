{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Fundamentos de Git y GitHUB","text":""},{"location":"#practica","title":"Pr\u00e1ctica","text":"<p>En esta web podr\u00e1s encontrar las pr\u00e1cticas del m\u00f3dulo Fundamentos de Git y GitHub del M\u00e1ster en Data Science y Big Data. La realizaci\u00f3n de las mismas, de forma personal, te permitir\u00e1 afianzar los contenidos te\u00f3ricos vistos en clase.</p>"},{"location":"#teoria","title":"Teor\u00eda","text":"<p>Estas pr\u00e1cticas se corresponden con los siguientes apartados del documento de teor\u00eda:</p> <ol> <li>Trabajando con repositorios locales</li> <li>Trabajando con repositorios remotos</li> <li>Trabajando con entornos de desarrollo</li> <li>Trabajando con ramas</li> <li>M\u00e1s sobre Git y GitHub</li> </ol>"},{"location":"2.repolocal/practica2.1/","title":"Pr\u00e1ctica 2.1 - Crear tu primer repositorio local","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"2.repolocal/practica2.1/#comprobar-configuracion","title":"Comprobar configuraci\u00f3n","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Comprueba que hayas configurado correctamente tu usuario y correo en Git</li> <li>Entra en la carpeta donde crear\u00e1s tus repositorios</li> </ol>"},{"location":"2.repolocal/practica2.1/#crear-repositorio-y-archivo","title":"Crear repositorio y archivo","text":"<ol> <li>Crea un nuevo repositorio llamado \"repo1\"   <li>Entra en la carpeta de tu nuevo repositorio  </li> <li>Crea un nuevo archivo llamado \"mensaje.txt\" y modifica su contenido  </li> <li>Comprueba el estado del repositorio  </li>"},{"location":"2.repolocal/practica2.1/#subir-cambios-al-repositorio","title":"Subir cambios al repositorio","text":"<ol> <li>A\u00f1ade el archivo anterior al staging area</li> <li>Vuelve a comprobar el estado del repositorio</li> <li>Confirma los cambios de tu repositorio</li> <li>Vuelve a comprobar el estado del repositorio</li> </ol>"},{"location":"2.repolocal/practica2.1/#mostrar-historial","title":"Mostrar historial","text":"<ol> <li>Muestra el historial de tu repositorio</li> </ol>"},{"location":"2.repolocal/practica2.2/","title":"Pr\u00e1ctica 2.2 - Recuperar versiones anteriores","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"2.repolocal/practica2.2/#crear-repositorio-y-archivo","title":"Crear repositorio y archivo","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Crea un nuevo repositorio llamado \"repo2\" <li>Crea, dentro de tu nuevo repo, un nuevo archivo vac\u00edo llamado \"saludo.txt\" <code>touch &lt;nombre_archivo&gt;</code></li>"},{"location":"2.repolocal/practica2.2/#confirmar-varias-versiones","title":"Confirmar varias versiones","text":"<ol> <li>A\u00f1ade el archivo al staging area</li> <li>Confirma los cambios de tu repositorio</li> <li>Edita el contenido del archivo y escribe un saludo <code>nano &lt;nombre_archivo&gt;</code></li> <li>Vuelve a a\u00f1adir el archivo al staging area y confirma los cambios (utiliza un solo comando)</li> <li>Vuelve el contenido del archivo y modifica el saludo</li> <li>Vuelve a a\u00f1adir el archivo al staging area y confirma los cambios (utiliza un solo comando)</li> <li>Muestra el historial de tu respositorio</li> </ol>"},{"location":"2.repolocal/practica2.2/#modificar-el-fichero-y-restaurar","title":"Modificar el fichero y restaurar","text":"<ol> <li>Vuelve el contenido del archivo y modifica el saludo</li> <li>Comprueba las diferencias de tu archivo con la \u00faltima versi\u00f3n subida al repositorio</li> <li>Restaura la \u00faltima versi\u00f3n subida al repositorio</li> <li>Comprueba el contenido del archivo <code>cat &lt;nombre_archivo&gt;</code></li> </ol>"},{"location":"2.repolocal/practica2.2/#recuperar-versiones-anteriores","title":"Recuperar versiones anteriores","text":"<ol> <li>Muestra el historial de tu respositorio (en una sola linea)</li> <li>Recupera la versi\u00f3n del segundo commit</li> <li>Comprueba las diferencias de tu archivo con la \u00faltima versi\u00f3n subida al repositorio</li> <li>Comprueba el contenido del archivo</li> </ol>"},{"location":"2.repolocal/practica2.2/#recuperar-ultima-version","title":"Recuperar \u00faltima versi\u00f3n","text":"<ol> <li>Recupera la \u00faltima versi\u00f3n del archivo</li> <li>Comprueba las diferencias de tu archivo con la \u00faltima versi\u00f3n subida al repositorio</li> </ol>"},{"location":"2.repolocal/practica2.3/","title":"Pr\u00e1ctica 2.3 - Trabajar con varios archivos","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"2.repolocal/practica2.3/#crear-repositorio","title":"Crear repositorio","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Crea un nuevo repositorio llamado \"repo3\""},{"location":"2.repolocal/practica2.3/#crear-un-archivo","title":"Crear un archivo","text":"<ol> <li>Crea, dentro de tu nuevo repo, un nuevo archivo vac\u00edo llamado \"mensaje1.txt\" y edita su contenido</li> <li>A\u00f1ade el archivo al staging area y confirma los cambios de tu repositorio</li> </ol>"},{"location":"2.repolocal/practica2.3/#crear-mas-archivos","title":"Crear m\u00e1s archivos","text":"<ol> <li>Crea otro archivo llamado \"mensaje2.txt\" y edita su contenido</li> <li>Crea otro archivo llamado \"mensaje3.txt\" y edita su contenido</li> <li>A\u00f1ade todos los archivos al staging area</li> <li>Comprueba el estado del repositorio</li> <li>Confirma los cambios de tu repositorio</li> <li>Muestra el historial de tu repositorio</li> </ol>"},{"location":"2.repolocal/practica2.3/#borrar-un-fichero-de-tu-repositorio","title":"Borrar un fichero de tu repositorio","text":"<ol> <li>Borra el fichero \"mensaje2.txt\" del repositorio `git rm  <li>Comprueba el estado del repositorio</li> <li>Confirma los cambios en tu repositorio</li> <li>Muestra el contenido de tu carpeta y comprueba que el fichero se ha elimitado <code>ls</code></li> <li>Muestra el historial de tu repositorio</li>"},{"location":"2.repolocal/practica2.3/#recuperar-version-anterior","title":"Recuperar versi\u00f3n anterior","text":"<ol> <li>Recupera la versi\u00f3n anterior al borrado del fichero \"mensaje2.txt\"</li> <li>Muestra el contenido de tu carpeta y comprueba que el fichero se ha recuperado</li> </ol>"},{"location":"3.reporemoto/practica3.1/","title":"Pr\u00e1ctica 3.1 - Crear tu primer repositorio remoto","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"3.reporemoto/practica3.1/#crear-repositorio-remoto","title":"Crear repositorio remoto","text":"<ol> <li>Abre tu cuenta de GitHub</li> <li>Crea un nuevo repositorio llamado \"repo1\" <li>Copia la URL de tu nuevo repositorio remoto</li>"},{"location":"3.reporemoto/practica3.1/#enlaza-tu-repositorio-local-con-tu-repositorio-remoto","title":"Enlaza tu repositorio local con tu repositorio remoto","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Entra en la carpeta de tu repositorio local \"repo1\" <li>Enlaza tu repositorio local con el remoto utilizando su URL</li>"},{"location":"3.reporemoto/practica3.1/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Sube los cambios al repositorio remoto (no olvides el par\u00e1metro -u)</li> <li>Muestra el historial de tu repositorio</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"3.reporemoto/practica3.1/#recuperar-cambios-del-repositorio-remoto","title":"Recuperar cambios del repositorio remoto","text":"<ol> <li>Desde tu repositorio de GitHub edita el fichero \"mensaje.txt\" y realiza un commit</li> <li>Vuelve a la carpeta de tu repositorio en Git Bash</li> <li>Recupera los cambios del repositorio r</li> <li>Muestra el historial de tu repositorio</li> <li>Muestra el contenido del archivo \"mensaje.txt\" <code>cat &lt;nombre_archivo&gt;</code></li> </ol>"},{"location":"3.reporemoto/practica3.2/","title":"Pr\u00e1ctica 3.2 - Crear repositorio remoto y borrar","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"3.reporemoto/practica3.2/#mostrar-historial-del-repositorio-local","title":"Mostrar historial del repositorio local","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Entra en la carpeta de tu repositorio local \"repo2\" <li>Muestra el historial de tu repositorio</li>"},{"location":"3.reporemoto/practica3.2/#crear-repositorio-remoto","title":"Crear repositorio remoto","text":"<ol> <li>Crea un nuevo repositorio en GitHub llamado \"repo2\" <li>Copia la URL de tu nuevo repositorio remoto</li>"},{"location":"3.reporemoto/practica3.2/#enlazar-tu-repositorio-local-con-tu-repositorio-remoto","title":"Enlazar tu repositorio local con tu repositorio remoto","text":"<ol> <li>Desde Git Bash entra en la carpeta de tu repositorio local \"repo2\" <li>Enlaza tu repositorio local con el remoto utilizando su URL</li>"},{"location":"3.reporemoto/practica3.2/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Sube los cambios al repositorio remoto No olvides el par\u00e1metro -u</li> <li>Entra en tu repositorio remoto de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"3.reporemoto/practica3.2/#mostrar-el-historial-del-repositorio-remoto","title":"Mostrar el historial del repositorio remoto","text":"<ol> <li>Desde tu repositorio de GitHub muestra el historial de commits</li> </ol>"},{"location":"3.reporemoto/practica3.2/#borrar-los-repositorios","title":"Borrar los repositorios","text":"<ol> <li>Desde GitHub entra en los ajustes de tu repositorio remoto y b\u00f3rralo</li> <li>Borra la carpeta de tu repositorio local (puedes utilizar el explorador o el terminal) <code>rm -Rf repo2&lt;tunombre&gt;</code></li> </ol>"},{"location":"3.reporemoto/practica3.3/","title":"Pr\u00e1ctica 3.3 - Clonar repositorio remoto","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"3.reporemoto/practica3.3/#crear-repositorio-remoto","title":"Crear repositorio remoto","text":"<ol> <li>Crea un nuevo repositorio en GitHub llamado \"repo4\" Marca el check Add README <li>Edita el fichero README.md y escribe alg\u00fan mensaje</li> <li>Realiza un commit de los cambios</li> <li>Copia la URL de tu nuevo repositorio remoto</li>"},{"location":"3.reporemoto/practica3.3/#clonar-tu-repositorio-remoto","title":"Clonar tu repositorio remoto","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Entra en la carpeta donde almacenas tus repositorios</li> <li>Clona tu repositorio remoto utilizando su URL</li> <li>Entra en la carpeta de tu nuevo repositorio \"repo4\" <li>Comprueba que puedes ver el archivo README.md <code>ls</code></li> <li>Muestra el contenido de dicho archivo <code>cat &lt;nombre_archivo&gt;</code></li> <li>Muestra el historial de tu repositorio</li>"},{"location":"3.reporemoto/practica3.3/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Edita el fichero README.md</li> <li>Vuelve a a\u00f1adir el archivo al staging area y confirma los cambios Utiliza un solo comando</li> <li>Sube los cambios al repositorio remoto</li> <li>Entra en tu repositorio remoto de GitHub y comprueba que se hayan subido los cambios</li> <li>Desde tu repositorio de GitHub muestra el historial de commits</li> </ol>"},{"location":"4.entorno/practica4.1/","title":"Pr\u00e1ctica 4.1 - Crear proyecto Python desde Entorno de desarrollo","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"4.entorno/practica4.1/#terminar-configuracion-inicial","title":"Terminar configuraci\u00f3n inicial","text":"<ol> <li>Comprueba que has instalado Python y Visual Studio Code</li> <li>Abre Visual Studio Code</li> <li>Instala las extensiones python y git graph</li> </ol>"},{"location":"4.entorno/practica4.1/#crear-proyecto-pyhon","title":"Crear proyecto Pyhon","text":"<ol> <li>Dentro de tu carpeta de repositorios, crea un carpeta llamada \"holamundo\" <li>Desde Visual Studio Code abre dicha carpeta</li> <li>Crea un nuevo fichero llamado \"holamundo.py\"</li> <li>Escribe algo de c\u00f3digo Python, por ejemplo: <code>print(\"Hola Mundo\")</code></li> <li>Ejecuta el fichero anterior y comprueba la terminal</li> <li>Modifica el fichero \"holamundo.py\"</li> <li>Ejecuta el fichero anterior y comprueba la terminal</li>"},{"location":"4.entorno/practica4.2/","title":"Pr\u00e1ctica 4.2 - Crear repositorio desde Entorno de desarrollo","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"4.entorno/practica4.2/#crear-repositorio-local","title":"Crear repositorio local","text":"<ol> <li>Abre tu proyecto \"holamundo\" desde Visual Studio Code</li> <li>Inicializa el repositorio</li> <li>Realiza un commit de los cambios (no olvides el texto del mensaje)</li> <li>Modifica el fichero \"holamundo.py\" y vuelve a realizar un commit</li> <li>Comprueba el historial en Git Graph</li> </ol>"},{"location":"4.entorno/practica4.2/#crear-repositorio-remoto","title":"Crear repositorio remoto","text":"<ol> <li>Desde Visual Studio Code crear un repositorio remoto asociado al local</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"4.entorno/practica4.2/#recuperar-cambios-del-repositorio-remoto","title":"Recuperar cambios del repositorio remoto","text":"<ol> <li>Desde tu repositorio GitHub pulsa el bot\u00f3n \"Add a README\"</li> <li>Escribe una descripci\u00f3n de tu proyecto y realiza un commit de los cambios</li> <li>Escribe una descripci\u00f3n de tu proyecto y realiza un commit de los cambios</li> <li>Vuelve a Visual Studio Code y actualiza tu repositorio</li> <li>Comprueba que ahora tienes el fichero \"README\" en tu repositorio local</li> </ol>"},{"location":"4.entorno/practica4.2/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Edita el fichero \"README\" y realiza un commit de los cambios</li> <li>Comprueba el historial en Git Graph</li> <li>Sube los cambios al repositorio remoto</li> <li>Vuelve a comprobar el historial en Git Graph</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"4.entorno/practica4.3/","title":"Pr\u00e1ctica 4.3 - USO de IA","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"4.entorno/practica4.3/#crear-programa-python","title":"Crear programa Python","text":"<ol> <li>Abre tu proyecto \"holamundo\" desde Visual Studio Code</li> <li>Abre el archivo \"holamundo.py\"</li> <li>Abre el chat de Copilot Si es la primera vez que lo usas tendr\u00e1s que configurarlo</li> <li>Comprueba que el archivo \"holamundo.py\" est\u00e1 en el contexto del chat</li> <li>Escribe un prompt en el que le pidas que cree un programa en Python. Por ejemplo: <code>escribe un programa en python que pida dos n\u00fameros al usuario, los sume y muestre el resultado por la consola</code></li> <li>Aplica los cambios</li> <li>Ejecuta el fichero \"holamundo.py\" y comprueba la terminal</li> </ol>"},{"location":"4.entorno/practica4.3/#actualizar-documentacion","title":"Actualizar documentaci\u00f3n","text":"<ol> <li>A\u00f1ade el archivo README.md al contexto del chat de copilot</li> <li>Escribe un prompt en el que le pidas que describa tu proyecto. Por ejemplo: <code>actualiza el fichero README.md, utilizando formato markdown, de manera que describa el c\u00f3digo actual. incluye en dicho fichero instrucciones de uso y un ejemplo de la ejecuci\u00f3n del c\u00f3digo</code></li> <li>Aplica los cambios</li> </ol>"},{"location":"4.entorno/practica4.3/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Realiza un commit de los cambios</li> <li>Sube los cambios al repositorio remoto</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"6.mas/practica6.1/","title":"Pr\u00e1ctica 6.1 - Ignorar fichero en el repositorio","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"6.mas/practica6.1/#crear-proyecto-pyhon","title":"Crear proyecto Pyhon","text":"<ol> <li>Dentro de tu carpeta de repositorios, crea un carpeta llamada \"secretos\" <li>Desde Visual Studio Code abre dicha carpeta</li> <li>Crea un nuevo fichero llamado \"main.py\"</li> <li>Escribe algo de c\u00f3digo Python en dicho fichero, por ejemplo: <code>print(\"Hola Mundo\")</code></li> <li>Ejecuta el fichero anterior y comprueba la terminal</li>"},{"location":"6.mas/practica6.1/#crear-fichero-secretos","title":"Crear fichero secretos","text":"<ol> <li>Crea un nuevo fichero llamado \"secretos.txt\"</li> <li>Escribe alg\u00fan secreto en dicho fichero</li> </ol>"},{"location":"6.mas/practica6.1/#mostrar-fichero-secretos","title":"Mostrar fichero secretos","text":"<ol> <li>Abre el chat de Copilot Si es la primera vez que lo usas tendr\u00e1s que configurarlo</li> <li>Comprueba que los archivos \"main.py\" y \"secretos.txt\" est\u00e1n en el contexto del chat</li> <li>Escribe un prompt en el que le pidas que cree un programa en Python que lea y muestre el fichero secretos. Por ejemplo: <code>crea un programa en python que lea el fichero secretos.txt y lo muestre por pantalla.</code></li> <li>Aplica los cambios</li> <li>Ejecuta el fichero \"main.py\" y comprueba la terminal</li> <li>Realiza las modificaciones que consideres oportunas</li> </ol>"},{"location":"6.mas/practica6.1/#crear-archivo-ignore","title":"Crear archivo ignore","text":"<ol> <li>Crea en tu repositorio un archivo llamado <code>.gitignore</code> No olvides el punto inicial</li> <li>Edita dicho fichero y a\u00f1ade el texto: <code>secretos.txt</code></li> </ol>"},{"location":"6.mas/practica6.1/#crear-repositorio-local-y-remoto","title":"Crear repositorio local y remoto","text":"<ol> <li>Inicializa el repositorio</li> <li>Realiza un commit de los cambios (no olvides el texto del mensaje)</li> <li>Modifica el fichero \"holamundo.py\" y vuelve a realizar un commit</li> <li>Comprueba el historial en Git Graph</li> <li>Desde Visual Studio Code crear un repositorio remoto asociado al local</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios Comprueba que no se ha subido el fichero \"secretos.txt\"</li> </ol>"},{"location":"6.mas/practica6.2/","title":"Pr\u00e1ctica 6.2 - Crear etiqueta de repositorio","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"6.mas/practica6.2/#crear-etiqueta-local","title":"Crear etiqueta local","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Entra en la carpeta de tu repositorio local \"holamundo\" <li>Crea una etiqueta con el nombre <code>v1.0.0</code></li> <li>Muestra la lista de tag creados en tu repositorio local</li>"},{"location":"6.mas/practica6.2/#crear-etiqueta-remoto","title":"Crear etiqueta remoto","text":"<ol> <li>Sube la etiqueta recien creada al repositorio remoto origin</li> <li>Entra en tu repositorio de GitHub y comprueba que se haya subido</li> <li>Desde GitHub crea un release asociado al tag</li> <li>Rellena el t\u00edtulo con <code>v1.0.0 - suma</code> y completa tambi\u00e9n la descripci\u00f3n</li> </ol>"},{"location":"6.mas/practica6.3/","title":"Pr\u00e1ctica 6.3 - Crear una pull request","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"6.mas/practica6.3/#_1","title":"Pr\u00e1ctica 6.3","text":""},{"location":"6.mas/practica6.4/","title":"Pr\u00e1ctica 6.4 - Crear una p\u00e1gina web","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p> <p>Para la realizaci\u00f3n de esta pr\u00e1ctica tendr\u00e1s que seguir los siguientes pasos.</p>"},{"location":"6.mas/practica6.4/#crear-repositorio-remoto","title":"Crear repositorio remoto","text":"<ol> <li>Crea un nuevo repositorio p\u00fablico en GitHub llamado  \"web_tunombre_\" Marca el check Add README</li> <li>Edita el fichero README.md y escribe la descripci\u00f3n de tu p\u00e1gina web</li> <li>Realiza un commit de los cambios</li> <li>Copia la URL de tu nuevo repositorio remoto</li> </ol>"},{"location":"6.mas/practica6.4/#clonar-tu-repositorio-remoto","title":"Clonar tu repositorio remoto","text":"<ol> <li>Abre la aplicaci\u00f3n Git Bash</li> <li>Entra en la carpeta donde almacenas tus repositorios</li> <li>Clona tu repositorio remoto utilizando su URL</li> <li>Entra en la carpeta de tu nuevo repositorio \"web_tunombre_\"</li> <li>Comprueba que puedes ver el archivo README.md <code>ls</code></li> </ol>"},{"location":"6.mas/practica6.4/#crear-pagina-web","title":"Crear p\u00e1gina web","text":"<ol> <li>Abre tu repositorio \"web\" desde Visual Studio Code <li>Abre el chat de Copilot Si es la primera vez que lo usas tendr\u00e1s que configurarlo</li> <li>Escribe un prompt en el que le pidas que cree una p\u00e1gina web. Por ejemplo: <code>crea un archivo html llamado index.html que muestre una presentaci\u00f3n de mi perfil profesional (profesor de inform\u00e1tica)</code></li> <li>Crea el archivo sugerido en tu repositorio</li> <li>Abre dicho archivo desde el explorador de Windows y comprueba el resultado</li> <li>Realiza los cambios que consideres oportunos</li>"},{"location":"6.mas/practica6.4/#enviar-cambios-al-repositorio-remoto","title":"Env\u00edar cambios al repositorio remoto","text":"<ol> <li>Realiza un commit de los cambios (no olvides el texto del mensaje)</li> <li>Sube los cambios al repositorio remoto</li> <li>Entra en tu repositorio de GitHub y comprueba que se hayan subido los cambios</li> </ol>"},{"location":"6.mas/practica6.4/#configurar-github-pages","title":"Configurar GitHub Pages","text":"<ol> <li>Desde GitHub entra en la configuraci\u00f3n de tu repositorio \"web_tunombre_\"</li> <li>Abre la pesta\u00f1a Pages, selecciona el branch \"main\" y pulsa \"save\"</li> <li>Visita el enlace a tu p\u00e1gina web que GitHub te ofrece</li> </ol>"}]}